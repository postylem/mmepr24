{"version":3,"file":"index.browser.min.js","sources":["../src/index.ts"],"sourcesContent":["import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\n\n// BOOL, STRING, INT, FLOAT, FUNCTION, KEY, KEYS, SELECT, HTML_STRING, IMAGE, AUDIO, VIDEO, OBJECT, COMPLEX\n\nconst info = <const>{\n  name: \"survey-slider\",\n  parameters: {\n    questions: {\n      type: ParameterType.COMPLEX,\n      array: true,\n      pretty_name: \"Questions\",\n      default: undefined,\n      nested: {\n        /** The HTML string to be displayed */\n        stimulus: {\n          type: ParameterType.HTML_STRING,\n          pretty_name: \"Stimulus\",\n          default: \"\",\n        },\n        prompt: {\n          type: ParameterType.STRING,\n          pretty_name: \"Prompt\",\n          default: undefined,\n          description: \"Content to be displayed below the stimulus and above the slider\",\n        },\n        // Labels to appear to the left of each slider, one in line with the top row ticks and one in line with the bottom\n        labels: {\n          type: ParameterType.STRING,\n          pretty_name: \"Labels\",\n          default: [],\n          array: true,\n          description: \"Labels of the sliders.\",\n        },\n        /** Array containing the ticks to show along the slider. Ticks will be displayed at equidistant locations along the slider. Note this parameter is called Labels in the original plugin.*/\n        ticks: {\n          type: ParameterType.HTML_STRING,\n          pretty_name: \"Ticks\",\n          default: [],\n          array: true,\n          description: \"Ticks of the sliders.\",\n        },\n        name: {\n          type: ParameterType.STRING,\n          pretty_name: \"Question Name\",\n          default: \"\",\n          description: \"Controls the name of data values associated with this question\",\n        },\n        min: {\n          type: ParameterType.INT,\n          pretty_name: \"Min slider\",\n          default: 0,\n          description: \"Sets the minimum value of the slider.\",\n        },\n        max: {\n          type: ParameterType.INT,\n          pretty_name: \"Max slider\",\n          default: 100,\n          description: \"Sets the maximum value of the slider\",\n        },\n        slider_start: {\n          type: ParameterType.INT,\n          pretty_name: \"Slider starting value\",\n          default: 50,\n          description: \"Sets the starting value of the slider\",\n        },\n        step: {\n          type: ParameterType.INT,\n          pretty_name: \"Step\",\n          default: 1,\n          description: \"Sets the step of the slider\",\n        },\n      },\n    },\n    randomize_question_order: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Randomize Question Order\",\n      default: false,\n      description: \"If true, the order of the questions will be randomized\",\n    },\n    preamble: {\n      type: ParameterType.HTML_STRING,\n      pretty_name: \"Preamble\",\n      default: null,\n      description: \"String to display at top of the page.\",\n    },\n    button_label: {\n      type: ParameterType.STRING,\n      pretty_name: \"Button label\",\n      default: \"Continue\",\n      description: \"Label of the button.\",\n    },\n    autocomplete: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Allow autocomplete\",\n      default: false,\n      description:\n        \"Setting this to true will enable browser auto-complete or auto-fill for the form.\",\n    },\n    require_movement: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Require movement\",\n      default: false,\n      description: \"If true, the participant will have to move the slider before continuing.\",\n    },\n    slider_width: {\n      type: ParameterType.INT,\n      pretty_name: \"Slider width\",\n      default: 500,\n      description: \"Width of the slider in pixels.\",\n    },\n  },\n};\n\ntype Info = typeof info;\n\n/**\n * **survey-slider**\n *\n * Add several analogue scales on the same page for use in questionnaires\n *\n * @author Dominique Makowski\n * @see {@link https://github.com/jspsych/jspsych-contrib/packages/plugin-survey-slider/README.md}}\n */\nclass SurveySliderPlugin implements JsPsychPlugin<Info> {\n  static info = info;\n\n  constructor(private jsPsych: JsPsych) {}\n\n  trial(display_element: HTMLElement, trial: TrialType<Info>) {\n    for (var i = 0; i < trial.questions.length; i++) {\n      //same as survey-number\n      if (typeof trial.questions[i].value == \"undefined\") {\n        trial.questions[i].value = \"\";\n      }\n    }\n    // half of the thumb width value from jspsych.css, used to adjust the label positions\n    var half_thumb_width = 7.5;\n\n    var html = '<div id=\"jspsych-html-slider-response-wrapper\" style=\"margin: 100px 0px;\">';\n\n    html +=\n      '<div class=\"jspsych-html-slider-response-container\" style=\"position:relative; margin: 0 auto 3em auto; ';\n    if (trial.slider_width !== null) {\n      html += \"width:\" + trial.slider_width + \"px;\";\n    } else {\n      html += \"width:auto;\";\n    }\n    html += '\">';\n\n    // show preamble text\n    if (trial.preamble !== null) {\n      // html += '<div style=\"position: relative; left: calc(-20%); width:130%\" id=\"jspsych-survey-slider-preamble\" class=\"jspsych-survey-slider-preamble\">'+trial.preamble+'</div><br>';\n      html +=\n        '<div style=\"position: relative; width:100%\" id=\"jspsych-survey-slider-preamble\" class=\"jspsych-survey-slider-preamble\">' +\n        trial.preamble +\n        \"</div><br>\";\n    }\n\n    if (trial.autocomplete) {\n      html += '<form id=\"jspsych-survey-slider-form\">';\n    } else {\n      html += '<form id=\"jspsych-survey-slider-form\" autocomplete=\"off\">';\n    }\n\n    // add sliders questions ///\n    // generate question order. this is randomized here as opposed to randomizing the order of trial.questions\n    // so that the data are always associated with the same question regardless of order\n    var question_order = [];\n    for (var i = 0; i < trial.questions.length; i++) {\n      question_order.push(i);\n    }\n    if (trial.randomize_question_order) {\n      // const shuffle = () => {\n      //   question_order = this.jsPsych.randomization.shuffle(question_order);\n      // }\n      question_order = this.jsPsych.randomization.shuffle(question_order);\n    }\n\n    for (var i = 0; i < trial.questions.length; i++) {\n      var question = trial.questions[question_order[i]];\n\n      // Add stimulus\n      html += '<div id=\"jspsych-html-slider-response-stimulus\">' + question.stimulus + \"</div>\";\n\n      // add prompt\n      html += '<label class=\"jspsych-survey-slider-statement\">' + question.prompt + \"</label><br>\";\n\n      // add top left label\n      if (question.labels.length > 0) {\n        html +=\n          '<div style=\"font-size: 100%; font-weight: bold; position: absolute; left: calc(-15%)\">' +\n          question.labels[0] +\n          \"</div>\";\n      }\n      // html += '<div style=\"font-size: 100%; font-weight: bold; position: absolute; right: calc(-25%)\">' + question.labels[1] + '</div>'\n\n      // Add top row ticks in ascending order\n      // for(var j=0; j < question.ticks.length; j++){\n      //   var label_width_perc = 95/(question.ticks.length-1);\n      //   var percent_of_range = 5 + j * (95/(question.ticks.length - 1));\n      //   var percent_dist_from_center = ((percent_of_range-50)/50)*100;\n      //   var offset = (percent_dist_from_center * half_thumb_width)/100;\n      //   html += '<div style=\"border: 1px solid transparent; position: absolute; '+\n      //   'left:calc('+percent_of_range+'% - ('+label_width_perc+'% / 2) - '+offset+'px); text-align: center; width: '+label_width_perc+'%;\">';\n      //   html += '<span style=\"text-align: center; font-size: 100%;\">'+question.ticks[j]+'</span>';\n      //   html += '</div>'\n      // }\n      // html += '<br>'\n\n      // add sliders\n      // html += '<input style=\"width: 95%; float: right\" type=\"range\" class=\"jspsych-slider\" value=\"'+(question.slider_start)+'\" min=\"'+question.min+'\" max=\"'+question.max+'\" step=\"'+question.step+'\" id=\"jspsych-html-slider-response-response-'+i+'\" name=\"Q'+i+'\" data-name=\"'+question.name+'\"></input><br>';\n      html +=\n        '<input style=\"width: 100%\" type=\"range\" class=\"jspsych-slider\" value=\"' +\n        question.slider_start +\n        '\" min=\"' +\n        question.min +\n        '\" max=\"' +\n        question.max +\n        '\" step=\"' +\n        question.step +\n        '\" id=\"jspsych-html-slider-response-response-' +\n        i +\n        '\" name=\"Q' +\n        i +\n        '\" data-name=\"' +\n        question.name +\n        '\"></input><br>';\n\n      // add bottom left label\n      if (question.labels.length > 0) {\n        html +=\n          '<div style=\"font-size: 100%; font-weight: bold; position: absolute; left: calc(-15%)\">' +\n          question.labels[1] +\n          \"</div>\";\n      }\n\n      // Bottom row ticks - reverse the ticks list and then do the same thing as before\n      // var reversed_ticks = question.ticks.reverse()\n      // for(var j=0; j < question.ticks.length; j++){\n      //   var label_width_perc = 95/(question.ticks.length-1);\n      //   var percent_of_range = 5 + j * (95/(question.ticks.length - 1));\n      //   var percent_dist_from_center = ((percent_of_range-50)/50)*100;\n      //   var offset = (percent_dist_from_center * half_thumb_width)/100;\n      //   html += '<div style=\"border: 1px solid transparent; display: inline-block; position: absolute; '+\n      //   'left:calc('+percent_of_range+'% - ('+label_width_perc+'% / 2) - '+offset+'px); text-align: center; width: '+label_width_perc+'%;\">';\n      //   html += '<span style=\"text-align: center; font-size: 80%;\">'+reversed_ticks[j]+'</span>';\n      //   html += '</div>'\n      // }\n\n      for (var j = 0; j < question.ticks.length; j++) {\n        var label_width_perc = 100 / (question.ticks.length - 1);\n        var percent_of_range = j * (100 / (question.ticks.length - 1));\n        var percent_dist_from_center = ((percent_of_range - 50) / 50) * 100;\n        var offset = (percent_dist_from_center * half_thumb_width) / 100;\n        html +=\n          '<div style=\"border: 1px solid transparent; position: absolute; ' +\n          \"left:calc(\" +\n          percent_of_range +\n          \"% - (\" +\n          label_width_perc +\n          \"% / 2) - \" +\n          offset +\n          \"px); text-align: center; width: \" +\n          label_width_perc +\n          '%;\">';\n        html +=\n          '<span style=\"text-align: center; font-size: 100%;\">' + question.ticks[j] + \"</span>\";\n        html += \"</div>\";\n      }\n\n      // add some space between the sliders\n      html += \"<br/><br/>\";\n    }\n\n    // add some space before the next button\n    html += \"<br/>\";\n\n    // add submit button\n    html +=\n      '<input type=\"submit\" id=\"jspsych-survey-slider-next\" class=\"jspsych-survey-slider jspsych-btn\" value=\"' +\n      trial.button_label +\n      '\"></input>';\n\n    html += \"</form>\";\n\n    html += \"</div>\";\n    html += \"</div>\";\n\n    display_element.innerHTML = html;\n\n    // require responses\n    if (trial.require_movement) {\n      // disable by default the next button\n      (<HTMLInputElement>document.getElementById(\"jspsych-survey-slider-next\")).disabled = true;\n\n      // check whether all sliders have been clicked\n      function check_reponses() {\n        var all_sliders = document.querySelectorAll(\".jspsych-slider\");\n        var all_clicked = true;\n        for (var i = 0; i < all_sliders.length; i++) {\n          if (!all_sliders[i].classList.contains(\"clicked\")) {\n            // if any one slider doesn't have the 'clicked' class, then we know that they haven't all been clicked\n            all_clicked = false;\n            break;\n          }\n        }\n        if (all_clicked) {\n          // if they have been clicked then enable the next button\n          (<HTMLInputElement>document.getElementById(\"jspsych-survey-slider-next\")).disabled =\n            false;\n        }\n      }\n\n      var all_sliders = document.querySelectorAll(\".jspsych-slider\");\n      all_sliders.forEach(function (slider) {\n        slider.addEventListener(\"click\", function () {\n          slider.classList.add(\"clicked\"); // record the fact that this slider has been clicked\n          check_reponses(); // each time a slider is clicked, check to see if they've all been clicked\n        });\n        slider.addEventListener(\"change\", function () {\n          slider.classList.add(\"clicked\"); // record the fact that this slider has been clicked\n          check_reponses(); // each time a slider is clicked, check to see if they've all been clicked\n        });\n      });\n    }\n\n    // display_element.querySelector('#jspsych-survey-slider-form').addEventListener('submit', function(e){\n    // Josh de Leeuw responded to my post in the support thread and told me to replace the line above with the line below but\n    // I still have the same error message as I did before\n    display_element.querySelector(\"#jspsych-survey-slider-form\").addEventListener(\"submit\", (e) => {\n      e.preventDefault();\n      // measure response time\n      var endTime = performance.now();\n      var response_time = endTime - startTime;\n\n      // create object to hold responses\n      var question_data = {};\n\n      // hold responses\n      var matches = display_element.querySelectorAll('input[type=\"range\"]');\n\n      // store responses\n      for (var index = 0; index < matches.length; index++) {\n        var q_element: HTMLInputElement | HTMLTextAreaElement = document.querySelector(\n          \"#jspsych-html-slider-response-response-\" + index\n        ); //CHECK\n        var id = q_element.name;\n        var response = q_element.value;\n        var obje = {};\n        if (matches[index].attributes[\"data-name\"].value !== \"\") {\n          var name = matches[index].attributes[\"data-name\"].value;\n        } else {\n          var name = id;\n        }\n        obje[name] = response;\n        Object.assign(question_data, obje);\n      }\n\n      // save data\n      var trial_data = {\n        rt: response_time,\n        response: JSON.stringify(question_data),\n        question_order: JSON.stringify(question_order),\n      };\n\n      display_element.innerHTML = \"\";\n\n      // next trial\n      this.jsPsych.finishTrial(trial_data);\n    });\n\n    var startTime = performance.now();\n  }\n}\n\nexport default SurveySliderPlugin;\n"],"names":["info","name","parameters","questions","type","ParameterType","COMPLEX","array","pretty_name","default","undefined","nested","stimulus","HTML_STRING","prompt","STRING","description","labels","ticks","min","INT","max","slider_start","step","randomize_question_order","BOOL","preamble","button_label","autocomplete","require_movement","slider_width","SurveySliderPlugin","jsPsych","_classCallCheck","this","key","value","display_element","trial","_this","i","length","html","question_order","push","randomization","shuffle","question","j","label_width_perc","percent_of_range","innerHTML","check_reponses","all_sliders","document","querySelectorAll","all_clicked","classList","contains","getElementById","disabled","forEach","slider","addEventListener","add","querySelector","e","preventDefault","response_time","performance","now","startTime","question_data","matches","index","q_element","id","response","obje","attributes","Object","assign","trial_data","rt","JSON","stringify","finishTrial"],"mappings":"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"}